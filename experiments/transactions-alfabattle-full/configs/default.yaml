seed_everything: 42
num_evaluation_seeds: 5

num_classes: 109
num_classes_plus1: 110
max_time_delta: 30
max_duration: 500
num_downstream_classes: 2

rnn_hidden_size: 512
rnn_half_hidden_size: 256
rnn_inference_context: 1200
rnn_inference_context_step: 200

transformer_hidden_size: 512
transformer_inter_size: 1024
transformer_heads: 4
transformer_layers: 6
transformer_context: 256
transformer_positions: 1232
transformer_dropout: 0.1
transformer_cls_token:
  timestamps: -1
  labels: ${num_classes}  # Use final label for CLS.
  channel_type: 0
  currency: 0
  operation_kind: 0
  operation_type: 0
  operation_type_group: 0
#  card_type: 0
  ecommerce_flag: 0
  payment_system: 0
  income_flag: 0
#  country: 0
#  city: 0
  mcc_category: 0
  day_of_week: 0
  hour: 0
  weekofyear: 0
  log_amount: -1
  log_hour_diff: -1

logger:
  _target_: pytorch_lightning.loggers.WandbLogger
  project: pretpp-alfabattle-full
  name: ${name}
  save_dir: lightning_logs
model_path: checkpoints/${name}.ckpt
report: results/${name}.yaml
multiseed_report: results/multiseed_${name}.yaml

data_module:
  _target_: hotpp.data.HotppDataModule
  fields:
    - labels
    - currency
    - operation_kind
#    - card_type
    - operation_type
    - operation_type_group
    - ecommerce_flag
    - payment_system
    - income_flag
#    - country
#    - city
    - mcc_category
    - day_of_week
    - hour
    - weekofyear
    - timestamps
    - log_amount
    - log_hour_diff
  batch_size: 512
  num_workers: 4
  train_params:
    min_required_length: 2
    min_length: 256
    max_length: 1200
  val_params:
    max_length: 512
    position: last
  test_params:
    max_length: 512
    position: last
  global_target_fields: target
  train_path: data/train.parquet
  val_path: data/val.parquet
  test_path: data/test.parquet

metric: null

nohead:
  _target_: pretpp.nn.IdentityHead
  _partial_: true

head:
  _target_: hotpp.nn.Head
  _partial_: true
  hidden_dims: []
  use_batch_norm: true

metric_head:
  _target_: pretpp.nn.MetricHead
  _partial_: true
  hidden_dims: [128]
  head_params:
    use_batch_norm: true

conditional_head:
  _target_: hotpp.nn.ConditionalHead
  _partial_: true
  hidden_dims: [128]
  use_batch_norm: true

metric_conditional_head:
  _target_: pretpp.nn.MetricConditionalHead
  _partial_: true
  hidden_dims: [256, 128]
  head_params:
    use_batch_norm: true

module:
  seq_encoder:
    embedder:
      _target_: hotpp.nn.Embedder
      use_batch_norm: false
      embeddings:
        labels:  # mcc.
          in: ${num_classes}
          out: 32
        currency:
          in: 13
          out: 2
        operation_kind:
          in: 9
          out: 2
#        card_type:
#          in: 177
#          out: 4
        operation_type:
          in: 24
          out: 4
        operation_type_group:
          in: 6
          out: 32
        ecommerce_flag:
          in: 5
          out: 1
        payment_system:
          in: 9
          out: 4
        income_flag:
          in: 5
          out: 1
#        country:
#          in: 26
#          out: 4
#        city:
#          in: 170
#          out: 4
        mcc_category:
          in: 30
          out: 16
        day_of_week:
          in: 9
          out: 2
        hour:
          in: 25
          out: 4
        weekofyear:
          in: 55
          out: 4
      numeric_values:
        timestamps: identity
        log_amount: identity
        log_hour_diff: identity
    max_time_delta: ${max_time_delta}
  aggregator:
    _target_: hotpp.nn.LastAggregator
  optimizer_partial:
    _partial_: true
    _target_: torch.optim.Adam
    lr: 0.001
    weight_decay: 0.0
  lr_scheduler_partial:
    _partial_: true
    _target_: torch.optim.lr_scheduler.StepLR
    step_size: 1
    gamma: 0.8
  val_metric: ${metric}
  test_metric: ${metric}
  downstream_validation_config: configs/downstream.yaml

trainer:
  accelerator: cuda
  devices: 1
  max_epochs: 30
  enable_checkpointing: true
  precision: 16-mixed
  gradient_clip_val: 1  # Increases training stability.
  check_val_every_n_epoch: 3
  model_selection:
    metric: val/downstream
    mode: max
