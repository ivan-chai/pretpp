defaults:
  - downstream@downstream
  - _self_

seed_everything: 42
num_evaluation_seeds: 5

num_classes: 385
num_classes_plus1: 386
max_time_delta: 8
max_duration: 8

rnn_hidden_size: 256
rnn_half_hidden_size: 128
rnn_inference_context: 1200
rnn_inference_context_step: 200

transformer_hidden_size: 256
transformer_heads: 4
transformer_layers: 2

logger:
  _target_: pytorch_lightning.loggers.WandbLogger
  project: pretpp-rosbank-full
  name: ${name}
  save_dir: lightning_logs
model_path: checkpoints/${name}.ckpt
report: results/${name}.yaml
multiseed_report: results/multiseed_${name}.yaml
downstream_report: results/downstream_${name}.yaml
test_downstream: true

data_module:
  _target_: hotpp.data.HotppDataModule
  fields:
    - labels
    - channel_type
    - currency
    - trx_category
    - log_amount
  batch_size: 128
  max_length: 1200
  num_workers: 4
  min_required_length: 2
  global_target_fields: target_flag
  train_path: data/train.parquet
  val_path: data/val.parquet
  test_path: data/test.parquet

metric: null

nohead:
  _target_: pretpp.nn.IdentityHead
  _partial_: true

head:
  _target_: hotpp.nn.Head
  _partial_: true
  hidden_dims: []
  use_batch_norm: true

metric_head:
  _target_: pretpp.nn.MetricHead
  _partial_: true
  hidden_dims: []
  head_params:
    use_batch_norm: true

conditional_head:
  _target_: hotpp.nn.ConditionalHead
  _partial_: true
  hidden_dims: [128]
  use_batch_norm: true

metric_conditional_head:
  _target_: pretpp.nn.MetricConditionalHead
  _partial_: true
  hidden_dims: [128]
  head_params:
    use_batch_norm: true

module:
  seq_encoder:
    _target_: hotpp.nn.RnnEncoder
    embedder:
      _target_: hotpp.nn.Embedder
      embeddings:
        labels:
          in: ${num_classes}
          out: 32
        channel_type:
          in: 7
          out: 8
        currency:
          in: 68
          out: 8
        trx_category:
          in: 11
          out: 8
      numeric_values:
        timestamps: identity
        log_amount: identity
    max_time_delta: ${max_time_delta}
  aggregator:
    _target_: hotpp.nn.MeanAggregator
  optimizer_partial:
    _partial_: true
    _target_: torch.optim.Adam
    lr: 0.001
    weight_decay: 0.0
  lr_scheduler_partial:
    _partial_: true
    _target_: torch.optim.lr_scheduler.StepLR
    step_size: 10
    gamma: 0.8
  val_metric: ${metric}
  test_metric: ${metric}
  downstream_validation_config: configs/downstream.yaml

trainer:
  accelerator: cuda
  devices: 1
  max_epochs: 60
  enable_checkpointing: true
  precision: 16-mixed
  gradient_clip_val: 1  # Increases training stability.
  check_val_every_n_epoch: 3
  model_selection:
    metric: val/loss
    mode: min
